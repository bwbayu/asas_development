question,reference_answer,answer,score,dataset,dataset_num,soal_num
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,it is the separating of large program into smaller classes then until target is reached,3.5,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,break up very large data structures into smaller sub units that are easier to manipulate,4.5,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,dividing a larger problem into the smallest incident of the problem and solving the smallest incident,4.5,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,dived and conquer is the breaking up of a large complex program into small easy to solve components,4.5,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,to divide one larger string or line of values and sepereate them into smallers lines to easily manipulate them and then replace them in the order in which they should be,3.5,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,to divide and conquer you divide the program in half once or multiple times to the extent that the program as a whole is easier to work in groups to solve the problem,4.5,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,divide elements recur then conquer which works in merge sort and quicksort,4.0,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,the divide and conquer paradigm divides a problem into smaller and smaller portions that are easier to solve,4.5,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,divide and coquer means dividing a problem into 2 plus problems which are solved and then merged back together for a final solution to the whole problem,5.0,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,the idea is to split the problem into half and solve for the smaller split problems,4.5,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,the divide and conquer paradigm splits a large problem into simpler problems at which point it solves the simpler problems and merges the simple solutions together to answer the large problem,5.0,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,the divide and conquer technique is where it takes the sorting algorithm and breaks up the array into smaller elements of the array to tackle the problem and run the algorithm,4.0,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,it takes a large problem and splits it into two or more easier or faster solutions and makes for better readability,4.5,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,divide the big problem into small problem solve small problem and join small solved elements of the problem if there is two ore more elements in the array divide the array into parts and compare the elements after comperison conquer the elements if array have n element first half have n divided by 2 elements,5.0,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,it is the taking of a larger problem and splitting it into simpler smaller problems,4.5,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,this is shown by the use of cpp and header files by splitting the program up into smaller subsections of individual code it becomes easier to write and keep up with as opposed to having all of your code in one file,3.0,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,you take a class and break down everything it is supposed to do into easily managed functions,3.0,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,divide the array in half sort each half then sort them back in one array,3.0,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,the idea of divide and conquer is to take a large problem split it into n smaller problems making the program easier to read and modify,4.5,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,it divides the problem into singular units and works on the problem piece by piece until the problem is solved,4.5,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,the divide and conquer paradigm divides the problem into two pieces and works on each piece separately allowing for a faster approach to 2 separate smaller problems,4.5,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,the divide and conquer paradigm is a recursive solution that keeps dividing the problem into halves until a base case is reached,4.5,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,divide and conquer refers to abstraction the act of separating large complex problems into smaller easier problems that can be solved by a relatively simple algorithm,4.5,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,split the problem into smaller more manageable parts and proceed to address the smaller problems,4.5,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,smaller parts are easier to compare than comparing the whole so it divides the problem down in halves until it can easily compare then works backwards putting it back together to give the solution,5.0,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,a divide and conquer paradigm takes some data divides it into two parts and works on each part indiviually until the item is found,4.5,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,dividing and conquering means breaking a problem into two smaller problems solving both of those and putting the two solutions together,5.0,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,when a problem is too big split it into smaller problems of the same type and solve those then from the solutions of the smaller problem give the solution to the larger original problem,5.0,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,for example we have an array on n elements the divide and conquer splits up the array into equal halves and repeats this process until each element is by itself,4.0,sag,sag-1,1
Briefly describe the divide-and-conquer paradigm.,divide a problem into smaller subproblems solve them recursively and then combine the solutions into a solution for the original problem,take a problem and divide it into a smaller problem and solve that smaller problem or divide it into a smaller problem and solve it thus solving the whole problem in the process,5.0,sag,sag-1,1
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,computers usually convert infix expressions to post fix expression and evaluate them using a stack,5.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,by being passed to the function by a leading term,1.5,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,infix expressions are converted to postfix expressions before they can be evaluated by a computer operands stay in the same order operators always follow the operands,5.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,the computer converts the infix expression to postfix form then evaluates the postfix expression,5.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,in postfix notation,4.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,they use parenthisis and a stack to determine which evaluations need to be made first,3.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,by using parentheses to have order in the expression,2.5,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,i have an hard time explaining this so i will show how infix is evaluated instead start with an infix expression like 5 plus 2multiplied by 5plus400 divided by2 plus 3 and push items until you get a and once that happens perform the operations until you reach an with that complete you will now have 7 multiplied by 5plus400 divided by2 plus 3as now the expression that will be evaluated perform last step again 35 plus400 divided by2 plus 3is now the stack repeat agian 35 plus400 divided by 5 is now the stack after that repeat 35 plus 80is now the stack repeat again 115 is now the stack and is returned,2.5,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,computers cannot evaulate infix expressions it must first convert infix to postfix expression then it can evaluate,5.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,by throwing variables into a postfix expression and operands onto a parentheses regulated stack until end parentheses and enough variables to operate on are encountered,4.5,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,they are first converted to postfix expressions and then evaluated,5.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,computers convert infix expressions to postfix form before evaluation,5.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,convert infix expressions to postfix expression and evaluate the postfix expression,5.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,when an operand is entered the computer pushes it onto a stack when an operator is entered the computer applies it to the top two operands of the stack pops the operands from the stack pushes the result of the operation onto the stack,4.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,computers convert an infix expression into a postfix expression they then push the numbers onto a stack and pop them out as they are needed,5.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,infix expressions are converted to postfix i e 3 plus 2 is changed to 32 plus,5.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,infix expressions are pointers evaluated by reference to the memory location,1.5,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,writing arithmetic expressions is called infix notation this is because a binary operatorlike plusis written in between its two operandsas in a plus b there are two alternative forms of notation used in certain situations one is prefix notation in which an operator is written before its operands in prefix notation the sum of a and b is written plus a b this is the notation used to write function calls in mathematics and computer science it is also used in the lisp and scheme programming languages in postfix notation an operator is written after its operands the sum of a and b is written a b plus you may have seen this as reverse polish notation postfix notation forms the conceptual basis for the way that arithmetic expressions are evaluated by a computer one important characteristic of both postfix and prefix notations is that they are unambiguous no parentheses are needed to indicate the order of operations,5.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,they are transformed into post fix expressions then evaluated with a stack,5.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,the computer translates the infix expression to a postfix expression then solves,5.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,they are first converted into an equivalent postfix expression so it can be read by the computer,5.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,infix expressions are interpreted as postfix expressions by implementing stacks,5.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,in postfix format,4.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,they are converted to post fix expressions it still follow the order of precedence for the operators,5.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,by converting them to postfix expressions and putting the operations in a stack,5.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,the infix expression is converted to postfix form,5.0,sag,sag-5,5
How are infix expressions evaluated by computers?,first they are converted into postfix form followed by an evaluation of the postfix expression,they are converted to postfix,5.0,sag,sag-5,5
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,public and private specifiers,5.0,sag,sag-23,23
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,public or private,5.0,sag,sag-23,23
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,a c plus plus class definition may include access specifiers public private and static,4.5,sag,sag-23,23
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,the access specifiers that can be used in a c plus plus class definition is private and public,5.0,sag,sag-23,23
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,public the function or variable can be used outside the class private the function or variable can only be used with the class,5.0,sag,sag-23,23
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,public private restricted,5.0,sag,sag-23,23
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,public private and protected,5.0,sag,sag-23,23
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,public and private,5.0,sag,sag-23,23
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,public can be accessed from outside the class private accessible only from inside the class not inherited protected accessible only from inside the class inherited,5.0,sag,sag-23,23
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,functions and data members can be given access specifications of public private and friend public access is given to any functions or members not given specific access rights,5.0,sag,sag-23,23
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,public can be accessed by any of the program private can only be accessed by the class functions themselves and no outside functions or calls,5.0,sag,sag-23,23
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,private public,5.0,sag,sag-23,23
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,public protected and private,5.0,sag,sag-23,23
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,public private protected,5.0,sag,sag-23,23
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,private public protected or friend,5.0,sag,sag-23,23
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,data member or data functions are access specifiers,0.5,sag,sag-23,23
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,static long unsigned,0.5,sag,sag-23,23
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,private public protected,5.0,sag,sag-23,23
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,the access specifiers are public and private,5.0,sag,sag-23,23
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,public private,5.0,sag,sag-23,23
What are the access-specifiers that can be used in a C plus plus class definition?,private and public,local global local variable function specific,2.5,sag,sag-23,23
What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,sag,sag-29,29
What are the two main functions defined by a queue?,enqueue and dequeue,enqueue insert into queue dequeue remove element,5.0,sag,sag-29,29
What are the two main functions defined by a queue?,enqueue and dequeue,remove the item added first add items to the back,5.0,sag,sag-29,29
What are the two main functions defined by a queue?,enqueue and dequeue,the two main functions of a queue are enqueue and dequeue,5.0,sag,sag-29,29
What are the two main functions defined by a queue?,enqueue and dequeue,enqueue which inserts a specified element at the head of the specified queue and dequeue which removes the specified element from the queue,5.0,sag,sag-29,29
What are the two main functions defined by a queue?,enqueue and dequeue,enquedata deque,5.0,sag,sag-29,29
What are the two main functions defined by a queue?,enqueue and dequeue,enqueue that adds an item to the queue dequeue that takes the first item out of the queue,5.0,sag,sag-29,29
What are the two main functions defined by a queue?,enqueue and dequeue,dequeue and enqueue,5.0,sag,sag-29,29
What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue which add and remove elements from the queue,5.0,sag,sag-29,29
What are the two main functions defined by a queue?,enqueue and dequeue,the two functions are enqueue and dequeue,5.0,sag,sag-29,29
What are the two main functions defined by a queue?,enqueue and dequeue,rear and front,2.5,sag,sag-29,29
What are the two main functions defined by a queue?,enqueue and dequeue,enqueue which adds data to the queue and dequeue which deletes data from the queue,5.0,sag,sag-29,29
What are the two main functions defined by a queue?,enqueue and dequeue,the two main functions are enqueue and dequeue,5.0,sag,sag-29,29
What are the two main functions defined by a queue?,enqueue and dequeue,enqueue dequeue,5.0,sag,sag-29,29
What are the two main functions defined by a queue?,enqueue and dequeue,the two main functions are enqueue which inserts an item at the back of the queue and dequeue which removes an item from the front of the queue,5.0,sag,sag-29,29
"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,queue its better to be fifo than lifostack,5.0,sag,sag-31,31
"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,a queue is more appropriate for scheduling printing jobs because queues have first in first out behavior,5.0,sag,sag-31,31
"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,queue of course,5.0,sag,sag-31,31
"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,a queue otherwise some things would never be printed,5.0,sag,sag-31,31
"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,a queue because you want the jobs to execute in the order that they are received,5.0,sag,sag-31,31
"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,i would say that a queue is better because the first thing you try to print should be the first one to come out of the printerfifo,5.0,sag,sag-31,31
"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,a stack some printing jobs might have a higher priority than others and they can be easily inserted at the front of the list or anywhere between,1.5,sag,sag-31,31
"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,a queue because it takes the job that has waited the longest,5.0,sag,sag-31,31
"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,queue the person who wanted to print first should be first served,5.0,sag,sag-31,31
"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,a queue is more appropriate because the clients which have waited the longest should be the first served,5.0,sag,sag-31,31
"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,queue,5.0,sag,sag-31,31
"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,a queue,5.0,sag,sag-31,31
"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,queues would be preferable to stacks for use as scheduling print jobs because it would print jobs in the order that they were sent to the printer,5.0,sag,sag-31,31
"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,queue because it guarantees that job are executed in the order they come in,5.0,sag,sag-31,31
"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,queue s are more appropriate as printers are usually first come first serve,5.0,sag,sag-31,31
"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,queue because of the first in first out principles and if it was a stack it would be last in last out because it could possibly not let the first item that was added get removed in a timely manner,5.0,sag,sag-31,31
"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,a queue it would not be unfair for the first job to finish last,5.0,sag,sag-31,31
"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,a queue data structure is more appropriate for scheduling printing jobs at a printer the first job sent to the printer is the first job printed,5.0,sag,sag-31,31
What does the sizeof operator return?,the size in bytes of its operand,sizeof returns the size in bytes of the respective object,4.5,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,the size of the string,3.0,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,the size of the information in bits,2.5,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,the amount of memory required for a specific parameter such as ints doubles,3.5,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,sizeof returns the size of the operand in bytes,5.0,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,it returns the size of the argument passed in,4.0,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,it returns the size of an array in bytes,4.5,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,returns size of operand in bytes,5.0,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,the sizeof operator returns the size of the operand,4.0,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,the number of bytes of an array during program compilation,4.5,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,the byte size of the date stored ina variable,4.5,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,the sizeof operator returns the total number of bytes of its operand,5.0,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,the size of an operand in bytes used with variable names type names and constant values,5.0,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,the size in bytes needed to store the object in memory,4.5,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,it yields the size in bytes of the operand which can be an expression or the parenthesized name of a type,4.0,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,it returns the size in bytes of a certain variable type,4.5,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,total number of bytes in the array,4.5,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,the total number of bytes of an object,4.5,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,returns the size of the array in bytes during the program compilation,4.5,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,it returns the size of an operand in memory which is checked at compiler time,4.0,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,the size of operand in bytes,5.0,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,the sizeof operator returns the size in bytes of an array parameter,4.0,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,returns the size in bytes of the specified data,4.5,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,the size of the list object,3.0,sag,sag-34,34
What does the sizeof operator return?,the size in bytes of its operand,return size of operand in bytes,5.0,sag,sag-34,34
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,it is a binary tree where each node has a value a total order is defined on these values the left subtree of a node contains only values less than the node s value and the right subtree of a node contains only values greater than or equal to the node s value,5.0,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,a binary search tree is a tree that also has the condition that each node may have at maximum 2 children and where the input data is compared to the data in the tree starting with the root if the value is smaller than the root it traverses left if it is larger it traverses right until it becomes a leaf,4.5,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,a binary tree with the data organized in a specific arangment,2.5,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,a tree where each node has at most two nodes and the node on the left is less than the root and the node on the right is greater than the root,4.5,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,a binary tree in which the data is in order from left to right,4.0,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,a tree that is set up so that it can be easily searched for numbers based on the location compared to the previous nodes,3.5,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,a set of numbers arranged by links each node can contain two pointers to other elements each node to the left of the parent is smaller and each node to the right is larger recursive implementation implies that if traversed in order the output would be sorted,4.5,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,a binary search tree is a special binary tree arranged such that every left child node contains a value less than its parent and every right child node contains a value greater its parent,5.0,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,a tree in which the smaller values are located on the left of a parent node and the larger values are located on the right of the parent node,5.0,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,a binary search tree is a special tree in which each node has at most two children labeled left child and right child,2.5,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,it is a binary tree where each node has a unique key the left child of a node has only values less than that node and the right child of each node has higher values than that node,5.0,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,binary search trees are a fundamental data structure used to construct more abstract data structures such as sets multisets and associative arrays,2.5,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,a binary tree with a special organization of data where the left child of the element is less than it and the right child is larger than it,5.0,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,it is similar to a binary tree the keys in a nonempty left subtreeright subtreeare smallerlargerthan the key in the root of subtree the values in all nodes in the left subtree of a node are less than the node value the values in all nodes in the right subtree of a node are greater than the node values,5.0,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,a binary tree where the children are ordered such that the right side is greater than the current node and the left is less than or equal the current node,5.0,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,a binary tree where the value in any node n is greater than the value in every node n s left subtree but less than every value in n s right subtree,5.0,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,binary search trees are similar to binary trees but have been implemented to organize data in a specific way for later searching,3.5,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,a binary tree where the value in any node n is greater than the value in every node in n s left subtree but less than the value of every node in n s right subtree,5.0,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,a special binary tree that has a rule that all the subtrees on the right are smaller than the node value and all the subtrees on the left are larger than the node value,4.0,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,a binary search tree is a finite set of nodes that is either empty or consits of a root and two disjoint binary trees call the left and right subtrees,2.5,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,a tree which is split based on values this makes it very easy to search one can compare the desired value to the root and if the root is greater than we search the left side of the tree if it is less than we search the right side and do the same thing recursively,5.0,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,a binary tree where the search key in any node n is greater than the search key in any node in n s left subtree but less than the search key in any node in n s right subtree,5.0,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,a tree data structure where each node has a value where the total order is defined on these values the left subtree contains only values less than the parent node and vice versa for the right subtree,5.0,sag,sag-36,36
What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child,a binary search tree is a binary tree where the value in any node n is greater than the value in every node in n s left subtree but less than every node in n s right subtree,5.0,sag,sag-36,36
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,a type of data structure in which each element is attached to one or more elements directly beneath it,4.0,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,it is a list of numbers in a list made by comparing values of nodes already in the tree and adding to the appropriate spot its a list made up of nodes with left and right pointers,3.0,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,a finite number of nodes such that there is one root node each node has a certain number of children nodes and each child is also a tree,5.0,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,a finite set of one or more nodes such that there is a root node and all other nodes are split into trees of lesser value than the root,4.0,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,a tree is a finite set of one or more nodes such that there is a specially designated node called the root the remaining nodes are partitioned into n is greater than or equal to 0 disjoint sets t the n plus 1 where each element set is a tree,5.0,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,a finite collection of nodes where it starts with an element called the root which has children and its children have children until you get to the leaves which are the last elements and have to children,4.5,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,a tree is a data structure with one or more data nodes each of which contains some data each node itself can have a number of attached child nodes creating the branched structure trees are named for,4.5,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,a finite set of nodes that starts with the root and terminates with leaves,4.0,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,a set of data arranged with pointers each element can have many pointers but no two pointers point to the same element,2.5,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,it organizes data in a nonlinear hierarchical form where items can have more than one successor partitioned into a root node and subsets are general subtrees of the root,5.0,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,an infinite set of nodes that have a root and descendants and each addition is a leaf,3.5,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,a tree is a branched data structure with nodes and leaves a special node called root has no parent node but however like all other nodes can and does have 2 nodes that it links to namely one on the right and one on the left,4.5,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,a nonlinear two dimensional data structure,2.0,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,a tree is a finite set of one or more nodes with a specially designated node called the root and the remaining nodes are partitioned into disjoint sets where each of these sets is a tree,5.0,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,a hierarchy of nodes that are sorted in a particular order each node has a ancestorexcept for the rootand childrenexcept for the leaves,4.0,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,a grouping of data in a parent to child structure,3.0,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,one or more nodes in a hierarchy starting with the root and branching off like a tree to subtrees,5.0,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,a set of one or more nodes that are hierarchically organized with one special root node,4.0,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,a tree is a data structure where nodes are linked to each other in a hierarchical manner,3.5,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,a tree is a series of nodes where each node has links to other nodes,3.0,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,a data structure that contains a root internal nodes and external nodes each node references another node by means of pointerspass by reference the root is the base of the tree it has no parents a leaf is a node at the end of the tree which points to null,5.0,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,a connected undirected graph without cycles,4.5,sag,sag-46,46
What is a tree?,a collection of nodes which has a special node called root and the rest of the nodes are partitioned into one or more disjoint sets each set being a tree,a tree is a finite set of one or more nodes such that there is a specially designated node called the root,4.5,sag,sag-46,46
What is the role of a header-file?,to store a class interface including data members and member function prototypes,header files contain code which can be used in multiple files,3.0,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,the main role of header file is it is used to share information among various files,3.0,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,contains all the standard c plus plus library s i e string,1.0,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,include hat h allows the use of the hat container so called from the act of pulling names from a hat the header file for hat includes functions for storage and retrieval of it is contents mainly put peek and pull,1.5,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,a header file usually contains class and function prototypes,4.5,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,class definitions are placed here,3.0,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,a header file allows for the separation of declaration and implementation into separate files,4.0,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,to declare the functions being used in the classes,3.0,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,create a comon area to contain reusable functions,3.0,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,instruct the compiler on how to interface with library and user written components,2.5,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,the header file has access to the c plus plus standard library and makes certain classes like class string work,1.5,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,header files separate files in which classes are defined and allow the compiler to recognize classes when used elsewhere,3.5,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,header files declares the class member functions,3.5,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,the header file shows the user what types go into and come out of a function but does not allow a user to manipulate the actual code for the function,4.5,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,to provide information about the contents of a library it includes the definition of classes declarations of functions data types and constants,4.5,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,a header file consists of reusable source code such as a class in a file that by convention has a h filename extension this differs from cpp files that contain source code,3.5,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,no,0.0,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,to promote function reusuablitly,3.0,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,the role of a header file list all the functions a class can do while hiding the inner workings of its functions,4.5,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,to hide the definition and details of a class also to help readability of the main c plus plus file,3.5,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,a header file is a file used to store a list of prototye functions and data members,5.0,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,a header file is a cross communication method between source files to help limit the size of each individual program without header files a program will be 1 large lump of code and thus fairly hard to debug and traverse,3.5,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,it contains reusable source code for use by other classes,3.0,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,to separate the source code from the main function allows the methods or classes to be included in the program without direct coding allows re usability,3.5,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,header files have reusable source code in a file that a programer can use,2.5,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,to allow the compiler to recognize the classes when used elsewhere,3.5,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,a header file declares a class its data and functions available through that class,4.0,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,allow compiler to recognize the classes when used elsewhere,3.0,sag,sag-70,70
What is the role of a header-file?,to store a class interface including data members and member function prototypes,to hold reusable content or modules separate from the actual source code file that can be easily referenced and employed for different programs,4.0,sag,sag-70,70
